{"version":3,"sources":["components/navbar/Navbar.jsx","pages/about/AboutPage.jsx","pages/portfolio/PortfolioPage.jsx","pages/javascript/JavascriptPage.jsx","pages/mongo/Mongo.jsx","pages/django/Django.jsx","pages/psql/PsqlPage.jsx","pages/express/ExpressPage.jsx","pages/react/ReactPage.jsx","pages/HomePage/HomePage.jsx","App.js","components/Footer.jsx","serviceWorker.js","index.js"],"names":["Navbar","className","to","id","React","Component","About","src","Portfolio","JavascriptPage","target","href","classsName","PiratePage","AnyagramPage","PsqlPage","ExpressPage","ReactPage","HomePage","App","exact","path","render","AboutPage","process","PortfolioPage","Mongo","Django","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd8f42fd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport '../../pages/Page.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div>0101000 010101 010100 010 10</div>\r\n          <Link className=\"name flex\" to=\"/\">101 110 10101<div id=\"colored-link\"> C0lemanH01mes </div>1001 11000 001</Link>\r\n          <Link className=\"title-link flex\" to=\"/about\">10100101 100101 <div id=\"colored-link\"> ab0ut </div>1010001 10101 01001</Link>\r\n          <Link className=\"title-link flex\" to=\"/portfolio\">101 11010<div id=\"colored-link\"> p0rtf0li0 </div> 1010101</Link>\r\n          <div className=\"title-link flex\">1010011 1001010 1011000 001 <div id=\"colored-link\"> c0ntact </div> 10101</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport '../Page.css'\r\n\r\nclass About extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"about-container\">\r\n        <div className=\"about-title\">ab0ut me</div>\r\n        <div className=\"section-title\">my name 1s Coleman Holmes and 1 am a s0ftware eng1neer, w1th a pat1cular 1nterest 1n React!  i graduated fr0m Texas A&M Un1vers1ty 1n 2010 and went 0n to teach f0r 8 years.  i taught everyth1ng fr0m bi010gy, chem1stry and phys1cs t0 c011ege prep.  i spent 6 years teach1ng 1n Texas at R1chland H1gh Sch00l and an0ther two years teaching at As1a Pac1f1c Internat1onal Sch00l in Hawa11.  i am a self-taught hacker and a General Assemb1y Cert1f1ed S0ftware Eng1neer.  i have a passi0n for web devel0pment, espec1a11y React.</div>\r\n\r\n        <div className=\"section-title\">Acc0mp1ishments</div>\r\n        <div className=\"section-item\"> B.S. 1n Bi0medica1 Sc1ence fr0m Texas A&M</div>\r\n        <div className=\"section-item\">8 years 0f teach1ng exper1ence</div>\r\n        <div className=\"section-item\">General Assembly S0ftware Engineering Certified</div>\r\n        <div className=\"section-title\">1nterests</div>\r\n        <div className=\"section-item\">basketba11</div>\r\n        <div className=\"section-item\">c0d1ng</div>\r\n        <div className=\"section-item\">read1ng</div>\r\n        <img className=\"profile-pic\" src=\"https://i.imgur.com/y5mnBu9.jpg\"></img>\r\n        <img className=\"volcano-pic\" src=\"https://i.imgur.com/70iP3Xw.jpg\"></img>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport \"../Page.css\"\r\n\r\nclass Portfolio extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"about-container\">\r\n        <div  className=\"about-title\">p0rtfo1i0</div>\r\n        <Link className=\"flex section-item\" to=\"/javascript\">1001 0 010101<div id=\"colored-link\">javascr1pt, html and css</div>10100 010</Link>\r\n        <Link className=\"flex section-item\" to=\"/express\">11010 0101 01<div id=\"colored-link\">express and node.js</div>00 010100</Link>\r\n        <Link className=\"flex section-item\" to=\"/react\">101001 1001 0<div id=\"colored-link\">react</div>001010 01 01</Link>\r\n        <Link className=\"flex section-item\" to=\"/mongo\">000 101001<div id=\"colored-link\">m0ng0db, at1as and m0ng00se</div>001010 0101</Link>\r\n        <Link className=\"flex section-item\" to=\"/django\">1010 000 1010<div id=\"colored-link\">djang0 and pyth0n</div>0010101 010</Link>\r\n        <Link className=\"flex section-item\" to=\"/psql\">101<div id=\"colored-link\">P0stgreSQL</div>101010010 100</Link>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../Page.css'\r\n\r\nclass JavascriptPage extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className=\"about-container\">\r\n        <div className=\"about-title\">javascr1pt</div>\r\n        <div className=\"section-title\">1n my initial foray into the world of javascript of my software engineering journey, i made some serious progress in working with vanilla javascript, html and css with the creation of Pirate's Booty.  Pirate's Booty is a fun, casino-style, slot machine game!</div>\r\n        <a  id=\"colored-link\" className=\"about-title\" target=\"_blank\" href=\"https://41holmes41.github.io/myproject1/\">Play Pirate's B00ty here!</a>\r\n        <img className=\"pirate-title\" src=\"https://i.imgur.com/yctJLxj.png\"/>\r\n        <div className=\"section-item\">Pirate's Booty requires some rather complex game logic in calculating the winnings for each round.  Shown below is the event listener that is attached to the spin button.</div>\r\n        <img className=\"pirate-title\" src=\"https://i.imgur.com/CUp45RQ.png\"/>\r\n        <div classsName=\"section-item\">the initial gameboard is produced with the getResult() function that fills each spot on the two-dimensional array that represents the game board with a integer between 1 and 5.</div>\r\n        <img className=\"pirate-title\" src=\"https://i.imgur.com/xKL00cK.png\"/>\r\n        <div classsName=\"section-item\">after the gameboard has been populated with a random integer, it is then passed to the getCombo() function.  The getCombo() function checks for matching integers in all dimensions of the current gameboard.  then the multiplier for the cash payout is set based on the amount of winning combinations.</div>\r\n        <div className=\"flex\">\r\n          <img className=\"pirate-getcombo\" src=\"https://i.imgur.com/5N8Y5Sq.png\"/>\r\n          <img className=\"pirate-getcombo\" src=\"https://i.imgur.com/Z0Ejcqf.png\"/>\r\n        </div>\r\n          <img className=\"pirate-getcombo2\" src=\"https://i.imgur.com/f102Mv3.png\"/>\r\n        <div classsName=\"section-item\">after the winning combinations and multipliers are calculated, the final aspect of the event listener attached to the spin button is the render() function </div>\r\n          <img className=\"pirate-result1\" src=\"https://i.imgur.com/jo3b9aB.png\"/>\r\n        <div classsName=\"section-item\">and finally, based off the randomized combonations, the gameboard is rendered</div>\r\n          <img className=\"pirate-result2\" src=\"https://i.imgur.com/pV1XF8m.png\"/>\r\n\r\n\r\n        <Link  id=\"colored-link\" className=\"section-title\" to=\"/portfolio\">Back</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default JavascriptPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Page.css'\r\n\r\nclass PiratePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about-container\">\r\n      <div className=\"about-title\">mongodb, atlas and mongoose</div>\r\n      <div className=\"section-title\">MongDB and Mongoose have become my go-to for all of my database hosting needs.  For my TaskMaster series, MongoDB Atlas provided my database hosting and Mongoose allowed me reliable and stable backend communications.  I appreciated the flexibility of the NoSQL, document-based format of Mongo because of its flexibility and adaptability.</div>\r\n      <a  id=\"colored-link\" className=\"about-title\" target=\"_blank\" href=\"https://taskmaster5000.herokuapp.com/\">Visit TaskMaster5000 here!</a>\r\n      <img className=\"mongo-title\" src=\"https://i.imgur.com/oWcJFVN.png\"/>\r\n      <div className=\"section-item\">TaskMaster5000 incoraporated MongoDB Atlas and Mongoose and stores all users, messages, tasks and groups on the Mongo database servers.  The following are the MongoDB models for uers, messages, groups and tasks used in TaskMaster5000.</div>\r\n      <div className=\"flex\">\r\n        <img className=\"schema1\" src=\"https://i.imgur.com/QPG6h8H.png\" />\r\n        <img className=\"schema2\" src=\"https://i.imgur.com/AJXQDtg.png\" />\r\n        <img className=\"schema3\" src=\"https://i.imgur.com/DEBGBm7.png\" />\r\n        <img className=\"schema4\" src=\"https://i.imgur.com/oZBUJDs.png\" />\r\n      </div>\r\n      <div className=\"section-item\">incorporated into the accessing and manipulating of data in the Atlas database, are the Mongoose commands in the controllers.  The following is an example of the showDashboard() route where callback functions were used to run multiple asynchronous functions.  However, if I were to refactor this code today, I would most defintely use async/await functions with try/catch blocks.</div>\r\n      <img className=\"mongo-showdashboard\" src=\"https://i.imgur.com/PRoO9aY.png\" />\r\n\r\n\r\n\r\n      <Link id=\"colored-link\"> className=\"section-title\" to=\"/portfolio\">Back</Link>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PiratePage","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Page.css'\r\n\r\nclass AnyagramPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about-container\">\r\n      <div className=\"about-title\">Django and Python</div>\r\n      <div className=\"about-title\">After rearching and delving into the Django platform, i found it to be rather impressive and intuitive to use.  Python is an elegant object-oriented coding language that was easy to learn and highly functional with minimal lines of code needed to be written.  I made the following app as part of a team of three people.  I played a crucial role in all aspects its creation including the front-end, back-end and github management.  CourtKings is a fun fantasy basketball team simulator that you can play now!</div>\r\n      <a  id=\"colored-link\" className=\"about-title\" target=\"_blank\" href=\"https://courtkings.herokuapp.com/\">Play C0urt K1ngs here!</a>\r\n      <img className=\"django-title\" src=\"https://i.imgur.com/vdMGrMF.png\"/>\r\n      <div className=\"about-section\">after initializing the project, the first step was to create the authentication view so that new users could sign up and use the app.  The simplicity of Django's inherent user mmodel expediated this process.</div>\r\n      <img className=\"django-signup\" src=\"https://i.imgur.com/wiQPu0K.png\"/>\r\n      <div className=\"about-section\">Routing in Django was simpler than express.  Although I regretted not having more control of the finer details, overall, using Django's URL patterns and paths was a quicker and more efficient process than using Express</div>\r\n      <img className=\"django-paths\" src=\"https://i.imgur.com/se9h1rh.png\"/>\r\n      <div className=\"about-section\">The logic for our game required a simulate day function for the league manager to press whenever stats needed to be generated.  Python provides a way to generate random numbers which were modified based on what kind of statistic was being generated and how high the particular player's ratings were.</div>\r\n      <img className=\"django-simulate\" src=\"https://i.imgur.com/75E4B4C.png\"/>\r\n\r\n\r\n\r\n      <Link className=\"section-title\" to=\"/portfolio\">Back</Link>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AnyagramPage","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../Page.css'\r\n\r\nclass PsqlPage extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className=\"about-container\">\r\n        <div className=\"about-title\">PostgreSQL</div>\r\n        <div className=\"section-title\">The CourtKings app stores its information with PostgreSQL technology.  PostgrSQL allowed for quick and efficient set-up and powerful referencing tools for accessing documents from other documents with foreign keys.  This made manipulating data within our app a manageable process.</div>\r\n        <a  id=\"colored-link\" className=\"about-title\" target=\"_blank\" href=\"https://courtkings.herokuapp.com/\">Play C0urt K1ngs here!</a>\r\n        <div className=\"section-item\">The following models were used in CourtKings to store all the data in the app.  </div>\r\n        <div className=\"flex\">\r\n          <img className=\"psql-model1\" src=\"https://i.imgur.com/zOFWXZy.png\"/>\r\n          <img className=\"psql-model2\" src=\"https://i.imgur.com/aynorW3.png\"/>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <img className=\"psql-model3\" src=\"https://i.imgur.com/6iRNTKf.png\"/>\r\n          <img className=\"psql-model4\" src=\"https://i.imgur.com/xWaQRHC.png\"/>\r\n        </div>\r\n        <div className=\"section-item\">In order to manipulate the information in the database, many views needed to be written to handle the operations.  Shown below are the create team view and show team views. </div>\r\n        <img className=\"psql-views\" src=\"https://i.imgur.com/AkUz0LX.png\"/>\r\n\r\n\r\n        <Link id=\"colored-link\" className=\"section-title\" to=\"/portfolio\">Back</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PsqlPage;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../Page.css'\r\n\r\nclass ExpressPage extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className=\"about-container\">\r\n      <div className=\"about-title\">express and node.js</div>\r\n      <div className=\"section-title\">My experience working with Express and Node.js showed me that, because of the true control and customization express offers, I slightly prefer it to the Django framework. The TaskMaster seriesuses Express and Node.js for its server creation.</div>\r\n      <a  id=\"colored-link\" className=\"about-title\" target=\"_blank\" href=\"https://taskmaster5000.herokuapp.com/\">Visit TaskMaster5000 here!</a>\r\n      <img className=\"mongo-title\" src=\"https://i.imgur.com/oWcJFVN.png\"/>\r\n      <div className=\"section-item\">TaskMaster5000 takes advantage of Google's Passport authorization platform in order to sign up new users and login.  All of the necessary routes are also protected with Passport:</div>\r\n      <img className=\"express-passport\" src=\"https://i.imgur.com/H94fQ99.png\"/>\r\n      <div className=\"section-item\">Using express router technology, the entire taskmaster series has routes that lead to controllers.  The following are examples of the routes for the group functions.</div>\r\n      <img className=\"express-controllers\" src=\"https://i.imgur.com/CElSqsM.png\"/>\r\n      <div className=\"section-item\">the routes lead to the controllers where the database functionality occurs:</div>\r\n      <img className=\"express-passport\" src=\"https://i.imgur.com/HdK3Ws2.png\"/>\r\n\r\n\r\n\r\n        <Link id=\"colored-link\" className=\"section-title\" to=\"/portfolio\">Back</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExpressPage;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../Page.css'\r\n\r\nclass ReactPage extends React.Component{\r\n  render() {\r\n    return(\r\n      <div className=\"about-container\">\r\n      <div className=\"about-title\">react</div>\r\n      <div className=\"section-title\">Learning and working in React was truly the most exciting adventure of my life.  I spent many hours studying the advantages of efficient state management and component reusability.  Any-a-gram and TaskMaster6000 were both made in React.  I want to highlight parts of each in order to display my React abilities</div>\r\n      <div className=\"flex\">\r\n        <div>\r\n          <a  id=\"colored-link\" className=\"about-title react-title\" target=\"_blank\" href=\"https://taskmaster6000.herokuapp.com/\">TaskMaster6000</a>\r\n          <img className=\"react-tm\" src=\"https://i.imgur.com/ek54sGV.png\"/>\r\n        </div>\r\n        <div>\r\n          <a  id=\"colored-link\" className=\"about-title react-title\" target=\"_blank\" href=\"https://anyagram.herokuapp.com/\">Any-A-Gram</a>\r\n          <img className=\"react-ag\" src=\"https://i.imgur.com/ShFU3JO.png\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"section-item\">From TaskMaster6000 I want to highlight the use of React-Router-Dom to navigate the client-side routes: </div>\r\n      <img className=\"react-routes\" src=\"https://i.imgur.com/ibvYhGL.png\"/>\r\n      <div className=\"section-item\">The next picture highlights my advancement into state management.  I enjoyed finding ways to maximize the efficiency of the app by pushing required state as far down the component chain as possible.  The following is a fully controlled form within the Any-a-gram app and all required state is found within the form itself</div>\r\n      <img className=\"express-controllers\" src=\"https://i.imgur.com/E9eeWPU.png\"/>\r\n      <div className=\"section-item\">Component reusability became a passion of mine.  Finding ways to make componenets completely reusable through the passing of props so that they can be used repeatedly throughout the entire app with complete customization and flexibility.</div>\r\n\r\n\r\n        <Link id=\"colored-link\" className=\"section-title\" to=\"/portfolio\">Back</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ReactPage;","import React from 'react';\r\nimport '../Page.css'\r\n\r\nclass HomePage extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"about-container\">\r\n      <a className=\"flex home-link about-title colored-link\" target=\"_blank\" href=\"https://taskmaster6000.herokuapp.com\">01010 101001 10101<div id=\"colored-link\">TaskMaster6000</div>101 010010 100</a>\r\n      <a className=\"flex home-link about-title colored-link\" target=\"_blank\" href=\"https://taskmaster5000.herokuapp.com\">100 1010100<div id=\"colored-link\">TaskMaster5000</div>11001 10101 010101010 10100 101001</a>\r\n      <a className=\"flex home-link about-title colored-link\" target=\"_blank\" href=\"https://taskmaster4000.herokuapp.com\">110<div id=\"colored-link\">TaskMaster4000</div>100101 1010</a>\r\n      <a className=\"flex home-link about-title colored-link\" target=\"_blank\" href=\"https://anyagram.herokuapp.com\">101 100<div id=\"colored-link\">Any-A-Gram</div>100 10010 101</a>\r\n      <a className=\"flex home-link about-title colored-link\" target=\"_blank\" href=\"https://courtkings.herokuapp.com\">100101100101<div id=\"colored-link\">CourtKings</div>101 101 001 1001</a>\r\n      <a className=\"flex home-link about-title colored-link\" target=\"_blank\" href=\"https://41holmes41.github.io/myproject1/\">110010 1001 010 <div id=\"colored-link\">P1rate's B00ty</div>110100 010</a>\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Navbar from './components/navbar/Navbar';\nimport AboutPage from './pages/about/AboutPage';\nimport PortfolioPage from './pages/portfolio/PortfolioPage'\nimport JavascriptPage from './pages/javascript/JavascriptPage';\nimport MongoPage from './pages/mongo/Mongo'\nimport DjangoPage from './pages/django/Django'\nimport PsqlPage from './pages/psql/PsqlPage'\nimport ExpressPage from './pages/express/ExpressPage'\nimport ReactPage from './pages/react/ReactPage'\nimport HomePage from './pages/HomePage/HomePage'\n\nimport Footer from './components/Footer'\n\n\nclass App extends React.Component {\n  render() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Switch>\n        <Route exact path=\"/about\" render={()=><AboutPage />}/>\n        <Route exact path={process.env.PUBLIC_URL + '/'} render={()=><HomePage />}/>\n        <Route exact path=\"/portfolio\" render={()=><PortfolioPage />}/>\n        <Route exact path=\"/Javascript\" render={()=><JavascriptPage />}/>\n        <Route exact path=\"/mongo\" render={()=><MongoPage />}/>\n        <Route exact path=\"/django\" render={()=><DjangoPage />}/>\n        <Route exact path=\"/psql\" render={()=><PsqlPage />}/>\n        <Route exact path=\"/express\" render={()=><ExpressPage />}/>\n        <Route exact path=\"/react\" render={()=><ReactPage />}/>\n      </Switch>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport '../pages/Page.css'\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"about-container\">\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}